{"version":3,"file":"static/js/559.685fba0f.chunk.js","mappings":"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","sources":["webpack://it-food/./src/pages/Order/Order.module.css?2b8b","webpack://it-food/./src/components/OrderCardRender/OrderCardRender.module.css?2b09","components/OrderCardRender/OrderCardRender.jsx","pages/Order/Order.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Order_modal__g0XoA\",\"modal_unmount\":\"Order_modal_unmount__euzB6\",\"orderContainer\":\"Order_orderContainer__N7itk\",\"orderDetails\":\"Order_orderDetails__NYDpI\",\"orderDetailsData\":\"Order_orderDetailsData__87RSr\",\"orderDetailTitle\":\"Order_orderDetailTitle__98NhI\",\"orderOption_wrapper\":\"Order_orderOption_wrapper__3H0vd\",\"orderOption\":\"Order_orderOption__zjM-0\",\"orderOption_dineIn\":\"Order_orderOption_dineIn__6Vu7H\",\"orderOption_delivery\":\"Order_orderOption_delivery__-65Yv\",\"orderOption_pickup\":\"Order_orderOption_pickup__mj9YC\",\"orderOption_detail\":\"Order_orderOption_detail__VXA-r\",\"orderOption_detail_isGrab\":\"Order_orderOption_detail_isGrab__SJ5vo\",\"orderOption_bottom\":\"Order_orderOption_bottom__vOm8W\",\"orderOption_total\":\"Order_orderOption_total__wjKGK\",\"orderOption_note\":\"Order_orderOption_note__Ytz4M\",\"orderOption_note_input\":\"Order_orderOption_note_input__WvqzO\",\"order_payment\":\"Order_order_payment__ObtX6\",\"order_payment_title\":\"Order_order_payment_title__SPO4W\",\"order_payment_sub_title\":\"Order_order_payment_sub_title__+eL91\",\"order_payment_sub_title_icon\":\"Order_order_payment_sub_title_icon__-UpER\",\"order_payment_amount\":\"Order_order_payment_amount__cl4Gn\",\"order_payment_method\":\"Order_order_payment_method__A+CtL\",\"order_payment_method_wrapper\":\"Order_order_payment_method_wrapper__za+ZK\",\"order_payment_method_btn\":\"Order_order_payment_method_btn__m9zDE\",\"payment_button_active\":\"Order_payment_button_active__ObFCQ\",\"order_payment_other_wrapper\":\"Order_order_payment_other_wrapper__WnQ6N\",\"order_payment_other_btn\":\"Order_order_payment_other_btn__iQcgS\",\"order_payment_done_btn\":\"Order_order_payment_done_btn__efvis\",\"order_payment_delete_btn\":\"Order_order_payment_delete_btn__JEkjx\",\"change_tip\":\"Order_change_tip__5eva0\",\"change_tip_title\":\"Order_change_tip_title__UTyTl\",\"change_tip_subTitle\":\"Order_change_tip_subTitle__iI0tt\",\"change_tip_input\":\"Order_change_tip_input__wmm+G\",\"change_tip_btn\":\"Order_change_tip_btn__UMbmz\"};","// extracted by mini-css-extract-plugin\nexport default {\"orderOption_detail_change\":\"OrderCardRender_orderOption_detail_change__Avr9X\",\"orderOption_detail_sup_change\":\"OrderCardRender_orderOption_detail_sup_change__GYSiG\",\"orderOption_detail_sub_change\":\"OrderCardRender_orderOption_detail_sub_change__GLsxE\",\"orderOption_detail_img\":\"OrderCardRender_orderOption_detail_img__xp9tS\",\"orderOption_card\":\"OrderCardRender_orderOption_card__DE7+U\",\"orderOption_detail_food_name\":\"OrderCardRender_orderOption_detail_food_name__5bC3W\",\"orderOption_detail_food_price\":\"OrderCardRender_orderOption_detail_food_price__wMQne\",\"orderOption_detail_food_price_cost\":\"OrderCardRender_orderOption_detail_food_price_cost__nfcA-\",\"orderOption_detail_change_btn\":\"OrderCardRender_orderOption_detail_change_btn__6-IaI\",\"orderOption_detail_change_icon\":\"OrderCardRender_orderOption_detail_change_icon__-lB0T\",\"orderOption_detail_quantity\":\"OrderCardRender_orderOption_detail_quantity__FfZcv\",\"orderOption_detail_change_icon_plus\":\"OrderCardRender_orderOption_detail_change_icon_plus__Aj8nW\",\"orderOption_detail_change_icon_minus\":\"OrderCardRender_orderOption_detail_change_icon_minus__80fbS\"};","import { AiFillMinusCircle, AiFillPlusCircle } from 'react-icons/ai';\nimport s from './OrderCardRender.module.css';\nimport FlipNumbers from 'react-flip-numbers';\n\nimport { useDispatch } from 'react-redux';\nimport {\n  decrementOrderedDishQuantity,\n  incrementOrderedDishQuantity,\n} from 'redux/order/orderSlice';\n\nexport const OrderCardRender = ({ props }) => {\n  const { _id, preview, title, price, quantity } = props;\n\n  const dispatch = useDispatch();\n  return (\n    <li className={s.orderOption_card}>\n      <img className={s.orderOption_detail_img} src={preview} alt={title}></img>\n      <div className={s.orderOption_detail_change}>\n        <div>\n          <p className={s.orderOption_detail_food_name}>{title}</p>\n          <div className={s.orderOption_detail_sup_change}>\n            <div className={s.orderOption_detail_sub_change}>\n              <p className={s.orderOption_detail_food_price}>Price</p>\n              <p className={s.orderOption_detail_food_price_cost}>$ {price}</p>\n            </div>\n            <div className={s.orderOption_detail_sub_change}>\n              <p className={s.orderOption_detail_food_price}>Quantity</p>\n              <p className={s.orderOption_detail_food_price_cost}>\n                <span> {quantity}</span>\n              </p>\n            </div>\n            <div className={s.orderOption_detail_sub_change}>\n              <p className={s.orderOption_detail_food_price}>Total</p>\n              <p className={s.orderOption_detail_food_price_cost}>\n                $ {(quantity * price).toFixed(2)}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={s.orderOption_detail_change}>\n        <button\n          onClick={() => dispatch(decrementOrderedDishQuantity(_id))}\n          className={s.orderOption_detail_change_btn}\n        >\n          <AiFillMinusCircle\n            className={`${s.orderOption_detail_change_icon} ${s.orderOption_detail_change_icon_minus}`}\n          />\n        </button>\n        <span className={s.orderOption_detail_quantity}>\n          <FlipNumbers\n            height={18}\n            width={18}\n            duration={1}\n            play\n            numbers={`${quantity}`}\n          />\n        </span>\n\n        <button\n          disabled={quantity >= 9}\n          onClick={() => dispatch(incrementOrderedDishQuantity(_id))}\n          className={s.orderOption_detail_change_btn}\n        >\n          <AiFillPlusCircle\n            className={`${s.orderOption_detail_change_icon} ${s.orderOption_detail_change_icon_plus}`}\n          />\n        </button>\n      </div>\n    </li>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport s from './Order.module.css';\n\nimport { useAuth } from 'components/hooks/useAuth';\nimport { useOrder } from 'components/hooks/useOrder';\n\nimport {\n  confirmOrder,\n  deleteOrder,\n  getByIdAndPhone,\n  getOrderById,\n} from 'redux/order/operations';\n\nimport { addOrderError } from 'redux/order/orderSlice';\nimport { refreshUser } from 'redux/auth/operations';\n\nimport {\n  AiOutlineDelete,\n  AiOutlineMail,\n  AiOutlineCheck,\n  AiOutlinePercentage,\n  AiOutlineCalendar,\n  AiOutlineNumber,\n} from 'react-icons/ai';\n\nimport { mainToast, orderToast } from 'constants/toastConfig';\n\nimport { Cash, Gift, MasterCard, Visa } from 'images';\nimport { Modal } from 'components/Modal';\nimport { OrderCardRender } from 'components/OrderCardRender';\nimport ScrollContainer from 'react-indiana-drag-scroll';\n\nconst Order = () => {\n  const [paymentMethod, setPaymentMethod] = useState('cash');\n  const [tipAmount, setTipAmount] = useState(5);\n  const [isTipChangeShow, setIsTipChangeShow] = useState(false);\n  const [toastMessage, setToastMessage] = useState(null);\n  const [currentOrderId, setCurrentOrderId] = useState(null);\n  const [orderNote, setOrderNote] = useState('');\n  const [orderOption, setOrderOption] = useState(null);\n\n  const { user, isLoggedIn } = useAuth();\n  const { lastOrder, orderLoading, orderError } = useOrder();\n  const { orderNumber, orderedDish, note, option, createdAt, _id } =\n    lastOrder || {};\n\n  const { phone, email } = user;\n\n  const { orderId } = useParams();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (orderedDish?.length === 0) {\n      dispatch(deleteOrder({ _id }));\n      setToastMessage('Order successfully deleted!');\n    }\n  }, [_id, dispatch, orderedDish]);\n\n  useEffect(() => {\n    setOrderOption(option);\n    setOrderNote(note);\n  }, [note, option]);\n\n  useEffect(() => {\n    setCurrentOrderId(prev => prev !== orderId && orderId);\n  }, [orderId]);\n\n  useEffect(() => {\n    if (phone && !isLoggedIn && orderId !== 'last') {\n      dispatch(getByIdAndPhone({ phone, _id: orderId }));\n    }\n  }, [currentOrderId, dispatch, isLoggedIn, orderId, phone]);\n\n  useEffect(() => {\n    if (orderId === 'last' && !lastOrder) {\n      navigate('/home');\n    }\n  }, [lastOrder, navigate, orderId]);\n\n  useEffect(() => {\n    if (isLoggedIn && orderId !== 'last') {\n      dispatch(getOrderById({ orderId }));\n    }\n  }, [dispatch, isLoggedIn, orderId, phone]);\n\n  useEffect(() => {\n    if (toastMessage && !orderLoading) {\n      toast.success(toastMessage, orderToast);\n      setTimeout(() => {\n        navigate('/home');\n        dispatch(refreshUser());\n      }, 10);\n    }\n  }, [dispatch, navigate, orderLoading, toastMessage]);\n\n  useEffect(() => {\n    if (orderError) {\n      setTimeout(() => {\n        navigate('/home');\n      }, 10);\n\n      toast.error(orderError, mainToast);\n      dispatch(addOrderError(null));\n    }\n  }, [dispatch, navigate, orderError]);\n\n  const totalPrice = orderedDish?.reduce(\n    (acc, { price, quantity }) => acc + Number(price * quantity),\n    0\n  );\n\n  const confirmDishes = orderedDish?.map(({ _id, quantity }) => {\n    return { id: _id, quantity };\n  });\n\n  const handlePaymentChange = e => {\n    setPaymentMethod(e.currentTarget.id);\n  };\n\n  const handleDeleteOrder = () => {\n    dispatch(deleteOrder({ _id }));\n    setToastMessage('Order successfully deleted!');\n  };\n\n  const modalToggle = () => setIsTipChangeShow(prev => !prev);\n\n  const handleConfirmOrder = () => {\n    dispatch(\n      confirmOrder({\n        _id: lastOrder._id,\n        paymentMethod,\n        tipAmount,\n        email,\n        orderedDish: confirmDishes,\n        note: orderNote,\n        option: orderOption,\n      })\n    );\n\n    setToastMessage(\n      'Thank you! Order successfully confirmed! We will contact you soon '\n    );\n  };\n  const handleOptionChange = option => {\n    setOrderOption(option);\n  };\n\n  const calculatedGiftCoin =\n    isLoggedIn && (((totalPrice * 0.03 * tipAmount) / 10) * 100).toFixed(0);\n\n  return (\n    <section className={s.orderContainer}>\n      {lastOrder && (\n        <>\n          <div className={s.orderDetails}>\n            <div className={s.orderDetailsData}>\n              <h1 className={s.orderDetailTitle}>Order details</h1>\n              <div className={s.orderOption_wrapper}>\n                <button\n                  id=\"dinein\"\n                  onClick={e => handleOptionChange(e.target.id)}\n                  className={`${s.orderOption} ${\n                    orderOption === 'dinein' && s.orderOption_dineIn\n                  }`}\n                  type=\"button\"\n                >\n                  DINE IN\n                </button>\n\n                <button\n                  id=\"delivery\"\n                  onClick={e => handleOptionChange(e.target.id)}\n                  className={`${s.orderOption} ${\n                    orderOption === 'delivery' && s.orderOption_delivery\n                  }`}\n                  type=\"button\"\n                >\n                  DELIVERY\n                </button>\n\n                <button\n                  id=\"pickup\"\n                  onClick={e => handleOptionChange(e.target.id)}\n                  className={`${s.orderOption} ${\n                    orderOption === 'pickup' && s.orderOption_pickup\n                  }`}\n                  type=\"button\"\n                >\n                  PICKUP\n                </button>\n              </div>\n            </div>\n\n            <ScrollContainer\n              hideScrollbars={false}\n              horizontal={false}\n              component=\"ul\"\n              className={s.orderOption_detail}\n              draggingClassName={s.orderOption_detail_isGrab}\n            >\n\n              {orderedDish.map(item => (\n                <OrderCardRender key={item._id || item.id} props={item} />\n              ))}\n            </ScrollContainer>\n            <div className={s.orderOption_bottom}>\n              <div className={s.orderOption_note}>\n                <p>Note</p>\n                <textarea\n                  className={s.orderOption_note_input}\n                  onChange={e =>\n                    orderNote.length > 100\n                      ? setOrderNote(prev => prev.slice(0, prev.length - 1))\n                      : setOrderNote(e.target.value)\n                  }\n                  value={orderNote}\n                />\n              </div>\n              <p className={s.orderOption_total}>\n                Total: <span>$ {totalPrice.toFixed(2)}</span>{' '}\n              </p>\n            </div>\n          </div>\n          <div className={s.order_payment}>\n            <div className={s.order_payment_title}>\n              <h1>Order payment</h1>\n              <div className={s.order_payment_sub_title}>\n                <span>\n                  <AiOutlineCalendar\n                    className={s.order_payment_sub_title_icon}\n                  />\n                  <p>{createdAt.slice(0, 10)}</p>\n                </span>\n\n                <span>\n                  <AiOutlineNumber className={s.order_payment_sub_title_icon} />\n\n                  <p>{orderNumber}</p>\n                </span>\n              </div>\n            </div>\n            <div className={s.order_payment_amount}>\n              <p className={s.order_payment_amount_tip}>\n                Tip amount {tipAmount}%\n                <span>$ {((totalPrice / 100) * tipAmount).toFixed(2)}</span>\n              </p>\n              {isLoggedIn && (\n                <p>\n                  Gift Coins\n                  <span> {calculatedGiftCoin}</span>\n                </p>\n              )}\n              <p>\n                Total amount\n                <span>\n                  $ {(totalPrice + (totalPrice / 100) * tipAmount).toFixed(2)}\n                </span>\n              </p>\n            </div>\n            <div className={s.order_payment_method}>\n              <p>Payment method</p>\n              <ul className={s.order_payment_method_wrapper}>\n                <li>\n                  <button\n                    id=\"cash\"\n                    onClick={handlePaymentChange}\n                    className={`${s.order_payment_method_btn} ${\n                      paymentMethod === 'cash' && s.payment_button_active\n                    }`}\n                  >\n                    <Cash />\n                  </button>\n                </li>\n                <li>\n                  <button\n                    id=\"mastercard\"\n                    onClick={handlePaymentChange}\n                    className={`${s.order_payment_method_btn} ${\n                      paymentMethod === 'mastercard' && s.payment_button_active\n                    }`}\n                  >\n                    <MasterCard />\n                  </button>\n                </li>\n                <li>\n                  <button\n                    id=\"visa\"\n                    onClick={handlePaymentChange}\n                    className={`${s.order_payment_method_btn} ${\n                      paymentMethod === 'visa' && s.payment_button_active\n                    }`}\n                  >\n                    <Visa />\n                  </button>\n                </li>\n                <li>\n                  <button\n                    id=\"gift\"\n                    onClick={handlePaymentChange}\n                    className={`${s.order_payment_method_btn} ${\n                      paymentMethod === 'gift' && s.payment_button_active\n                    }`}\n                  >\n                    <Gift />\n                  </button>\n                </li>\n              </ul>\n              <ul className={s.order_payment_other_wrapper}>\n                <li>\n                  <button\n                    onClick={() => setIsTipChangeShow(prev => !prev)}\n                    className={s.order_payment_other_btn}\n                  >\n                    <AiOutlinePercentage />\n                    <p>Tip amount</p>\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={handlePaymentChange}\n                    className={s.order_payment_other_btn}\n                  >\n                    <AiOutlineMail />\n                    <p>Email</p>\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={handleDeleteOrder}\n                    className={`${s.order_payment_other_btn} ${s.order_payment_delete_btn}`}\n                  >\n                    <AiOutlineDelete />\n                    <p>Delete order</p>\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={handleConfirmOrder}\n                    className={`${s.order_payment_other_btn} ${s.order_payment_done_btn}`}\n                  >\n                    <AiOutlineCheck />\n                    <p>Done</p>\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </>\n      )}\n\n      {isTipChangeShow && (\n        <Modal modalToggle={modalToggle} styles={s}>\n          <div className={s.change_tip}>\n            <h1 className={s.change_tip_title}>TIP CHANGE</h1>\n\n            <p className={s.change_tip_subTitle}>You can change tip amount</p>\n\n            <form className={s.signIn_form}>\n              <label htmlFor=\"tipChange\">\n                <input\n                  className={s.change_tip_input}\n                  name=\"tipChange\"\n                  type=\"number\"\n                  value={tipAmount}\n                  onChange={e =>\n                    setTipAmount(\n                      e.target.value > 0 && e.target.value < 31\n                        ? e.target.value\n                        : 0\n                    )\n                  }\n                />\n              </label>\n            </form>\n            <button\n              className={s.change_tip_btn}\n              onClick={modalToggle}\n              id=\"tipChange\"\n            >\n              OK\n            </button>\n          </div>\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default Order;\n"],"names":["OrderCardRender","props","_id","preview","title","price","quantity","dispatch","useDispatch","className","s","src","alt","toFixed","onClick","decrementOrderedDishQuantity","height","width","duration","play","numbers","disabled","incrementOrderedDishQuantity","useState","paymentMethod","setPaymentMethod","tipAmount","setTipAmount","isTipChangeShow","setIsTipChangeShow","toastMessage","setToastMessage","currentOrderId","setCurrentOrderId","orderNote","setOrderNote","orderOption","setOrderOption","useAuth","user","isLoggedIn","useOrder","lastOrder","orderLoading","orderError","orderNumber","orderedDish","note","option","createdAt","phone","email","orderId","useParams","navigate","useNavigate","useEffect","length","deleteOrder","prev","getByIdAndPhone","getOrderById","toast","orderToast","setTimeout","refreshUser","mainToast","addOrderError","totalPrice","reduce","acc","Number","confirmDishes","map","id","handlePaymentChange","e","currentTarget","modalToggle","handleOptionChange","calculatedGiftCoin","target","type","hideScrollbars","horizontal","component","draggingClassName","item","onChange","slice","value","confirmOrder","Modal","styles","htmlFor","name"],"sourceRoot":""}